{"version":3,"sources":["load.js"],"names":["GlobalData","require","wave","canvasHeight","canvasWidth","waveHeight","waveWidth","xOffset","speed","levelHeight","cc","Class","extends","Component","properties","loadingBar","Graphics","startBtn","Button","init","console","log","date","Date","year","getFullYear","month","getMonth","dat","getDate","hour","getHours","minute","getMinutes","second","getSeconds","timeStr","flagLocation","serverAddr","data","loginTime","HttpHelper","httpPost","res","userID","flagNewUser","Number","contLoginDays","drawWave","ctx","startX","clear","time","moveTo","x","y","Math","sin","lineTo","fill","onStartBtnClicked","director","loadScene","onLoad","node","active","start","preloadScene","update"],"mappings":"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","file":"load.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\load\\JS","sourcesContent":["// 加载数据\r\nvar GlobalData = require(\"globalData\");\r\n// 加载框水波对象\r\nvar wave = {\r\n    canvasHeight: 200,  // 画面高度\r\n    canvasWidth: 300, // 画面宽度\r\n    waveHeight: 10, // 水波高度\r\n    waveWidth: 0.02,// 水波宽度\r\n    xOffset: 0, // 波浪的横坐标偏移\r\n    speed: 0.1, // 波浪速度\r\n    levelHeight: 10 // 水平线\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        loadingBar: cc.Graphics,\r\n        startBtn: cc.Button\r\n    },\r\n\r\n    init: function(){\r\n        console.log(\"init\", GlobalData);\r\n        GlobalData.init();\r\n\r\n        // test for login: wangc\r\n        let date = new Date();\r\n        let year = date.getFullYear(); //获取当前年份   \r\n        let month = date.getMonth() + 1; //获取当前月份   \r\n        let dat = date.getDate(); //获取当前日    \r\n        let hour = date.getHours(); //获取小时   \r\n        let minute = date.getMinutes(); //获取分钟   \r\n        let second = date.getSeconds(); //获取秒   \r\n        let timeStr = year + '-' + month + '-' + dat + ' ' + hour + ':' + minute + ':' + second;\r\n        let flagLocation = GlobalData.flagLocation;\r\n        let serverAddr = GlobalData.serverAddr + \"php/login.php\";\r\n        // 调用自定义网路接口进行登录操作\r\n        var data = {\r\n            loginTime: timeStr,\r\n            flagLocation: flagLocation,\r\n        };\r\n        HttpHelper.httpPost(serverAddr, data, function (res) {\r\n            if (res == -1) {\r\n                console.log(\"访问失败\");\r\n            } else {\r\n                console.log(res);\r\n                GlobalData.userID = res.userID;\r\n                GlobalData.flagNewUser = Number(res.flagNewUser);\r\n                GlobalData.contLoginDays = Number(res.contLoginDays);\r\n            }\r\n        });\r\n\r\n        console.log('登录完成');\r\n\r\n        // console.log(globalData.species);\r\n    },\r\n\r\n    drawWave: function() {\r\n        var ctx = this.loadingBar;\r\n        const startX = 0;\r\n        ctx.clear();\r\n\r\n        this.time += 1;\r\n        wave.xOffset += wave.speed;\r\n        wave.levelHeight += 1;\r\n        ctx.moveTo(0, 0);\r\n        for (let x = startX; x < startX + wave.canvasWidth; x += 20 / wave.canvasWidth) {\r\n            const y = wave.waveHeight * Math.sin((startX + x) * wave.waveWidth + wave.xOffset) + wave.levelHeight;\r\n            ctx.lineTo(x, y);\r\n        }\r\n        ctx.lineTo(wave.canvasWidth, 0);\r\n        ctx.lineTo(startX, 0);\r\n        ctx.fill();\r\n    },\r\n\r\n    onStartBtnClicked: function() {\r\n        console.log('turn to adopt page');\r\n        cc.director.loadScene(\"portrayPage\");\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.init();\r\n        this.time = 0;\r\n        this.startBtn.node.active = false;\r\n    },\r\n\r\n    start () {\r\n        cc.director.preloadScene(\"portrayPage\", function () {\r\n            cc.log(\"Next scene preloaded\");\r\n        });\r\n    },\r\n\r\n    update () {\r\n        if (wave.levelHeight < 150) {\r\n            this.drawWave();\r\n        }\r\n        else {\r\n            this.startBtn.node.active = true;\r\n        }\r\n    },\r\n});\r\n"]}