{"version":3,"sources":["net.js"],"names":["HttpHelper","cc","Class","extends","Component","statics","properties","httpGet","url","callback","xhr","loader","getXMLHttpRequest","onreadystatechange","readyState","status","respone","responseText","rsp","JSON","parse","withCredentials","open","sys","isNative","setRequestHeader","myGame","gameManager","getToken","timeout","send","httpPost","params","stringify","httpPostLogin","account","password","str","window","btoa"],"mappings":"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","file":"net.js","sourceRoot":"..\\..\\..\\..\\assets\\Global","sourcesContent":["// 网络请求处理\n// author：wang-c\n// 三个函数，httpGet,httpPost,httpPostLogin\n// httpPostLogin 还需要按照微信小游戏的登录模式修改\n// 用法：全局变量window.HttpHelper,使用时只需HttpHelper.httpGet(url, callback) 即可\n\nconst HttpHelper = cc.Class({\n    extends: cc.Component,\n \n    statics: {\n    },\n \n    properties: {\n \n    },\n \n    /**\n     * get请求\n     * @param {string} url 访问的url\n     * @param {function} callback 回调函数, 再函数结束后调用外部函数\n     */\n    httpGet(url, callback) {\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            // cc.log(\"Get: readyState:\" + xhr.readyState + \" status:\" + xhr.status);\n            if (xhr.readyState === 4 && xhr.status == 200) {\n                let respone = xhr.responseText;\n                let rsp = JSON.parse(respone);\n                callback(rsp);\n            } else {\n                callback(-1);\n            }\n        };\n        xhr.withCredentials = true;\n        xhr.open('GET', url, true);\n \n        if (cc.sys.isNative) {\n            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\n            xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.setRequestHeader('Authorization', 'Bearer ' + cc.myGame.gameManager.getToken());\n            xhr.setRequestHeader('Authorization', 'Bearer ' + \"\");\n        }\n \n        // note: In Internet Explorer, the timeout property may be set only after calling the open()\n        // method and before calling the send() method.\n        xhr.timeout = 8000;// 8 seconds for timeout\n \n        xhr.send();\n    },\n \n    /**\n     * post请求\n     * @param {string} url 请求url\n     * @param {object} params 请求参数\n     * @param {function} callback 回调函数\n     */\n    httpPost(url, params, callback) {\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            // cc.log('xhr.readyState=' + xhr.readyState + '  xhr.status=' + xhr.status);\n            if (xhr.readyState === 4 && xhr.status == 200) {\n                let respone = xhr.responseText;\n                let rsp = JSON.parse(respone);\n                callback(rsp);\n            } else {\n                callback(-1);\n            }\n        };\n        xhr.open('POST', url, true);\n        // if (cc.sys.isNative) {\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n        xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\n        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        // }\n \n        // note: In Internet Explorer, the timeout property may be set only after calling the open()\n        // method and before calling the send() method.\n        xhr.timeout = 8000;// 8 seconds for timeout\n \n        xhr.send(JSON.stringify(params));\n    },\n \n    /**\n     * 登录专用\n     * @param {string} url \n     * @param {object} params \n     * @param {function} callback \n     * @param {string} account \n     * @param {string} password \n     */\n    httpPostLogin(url, params, callback, account, password) {\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            // cc.log('xhr.readyState=' + xhr.readyState + '  xhr.status=' + xhr.status);\n            if (xhr.readyState === 4 && xhr.status == 200) {\n                let respone = xhr.responseText;\n                let rsp = JSON.parse(respone);\n                callback(rsp);\n            } else {\n                callback(-1);\n            }\n        };\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n        xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');\n        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        let str = account + \"@\" + password;\n        xhr.setRequestHeader('Authorization', 'Basic' + ' ' + window.btoa(str));\n \n        xhr.timeout = 8000;// 8 seconds for timeout\n \n        xhr.send(JSON.stringify(params));\n \n    }\n});\n \nwindow.HttpHelper = new HttpHelper();"]}