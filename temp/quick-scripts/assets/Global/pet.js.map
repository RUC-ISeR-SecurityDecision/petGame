{"version":3,"sources":["pet.js"],"names":["GlobalData","require","cc","Class","extends","Component","properties","image","Sprite","onLoad","init","petImagePath","gender","self","species","color","loader","loadRes","SpriteFrame","err","sp","console","log","node","spriteFrame","eat","toiletries","shower","sleep","time","work","type","travel","place","waiting","hunger","cleaness","energy","thirst","growth","walk","jump","happy","sad","skip","sleepAction","start"],"mappings":";;;;;;AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,CAAjB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAOL,GAAGM;AADF,KAHP;;AAOL;;AAEAC,UATK,oBASK;AACN,aAAKC,IAAL;AACH,KAXI;;;AAaLA,UAAM,gBAAY;AAAA;;AACd,YAAIC,eAAeX,WAAWY,MAAX,IAAqB,CAArB,GAAyB,WAAzB,GAAuC,aAA1D;AACA,YAAIC,OAAO,IAAX;AACA,YAAIb,WAAWc,OAAX,IAAsB,CAA1B,EAA6B;AACzBH,4BAAgB,KAAhB;AACH,SAFD,MAEO,IAAIX,WAAWc,OAAX,IAAsB,CAA1B,EAA6B;AAChCH,4BAAgB,UAAhB;AACH,SAFM,MAEA,IAAIX,WAAWc,OAAX,IAAsB,CAA1B,EAA6B;AAChCH,4BAAgB,KAAhB;AACH,SAFM,MAEA,IAAIX,WAAWc,OAAX,IAAsB,CAA1B,EAA6B;AAChCH,4BAAgB,KAAhB;AACH;AACDA,wBAAiBX,WAAWe,KAAX,GAAmB,CAApB,GAAyB,EAAzC;;AAEAb,WAAGc,MAAH,CAAUC,OAAV,CAAkBN,YAAlB,EAAgCT,GAAGgB,WAAnC,EAAgD,UAACC,GAAD,EAAMC,EAAN,EAAa;AACzD,gBAAID,GAAJ,EAAS;AACLE,wBAAQC,GAAR,CAAYH,GAAZ;AACA;AACH;AACD,gBAAI,MAAKI,IAAT,EAAe;AACXF,wBAAQC,GAAR,CAAY,SAAZ;AACA,oBAAIT,KAAKN,KAAT,EAAgB;AACZM,yBAAKN,KAAL,CAAWiB,WAAX,GAAyBJ,EAAzB;AACH;AACJ;AACJ,SAXD;AAYH,KAvCI;;AAyCL;;;;AAIAK,SAAK,aAAUC,UAAV,EAAsB,CAE1B,CA/CI;;AAiDL;;;;AAIAC,YAAQ,gBAAUD,UAAV,EAAsB,CAE7B,CAvDI;;AAyDL;;;;AAIAE,WAAO,eAAUC,IAAV,EAAgB,CAEtB,CA/DI;;AAiEL;;;;;AAKAC,UAAM,cAAUD,IAAV,EAAgBE,IAAhB,EAAsB,CAE3B,CAxEI;;AA0EL;;;;;AAKAC,YAAQ,gBAAUH,IAAV,EAAgBI,KAAhB,EAAuB,CAE9B,CAjFI;;AAmFL;AACAC,aAAS,mBAAY;AACjBlC,mBAAWmC,MAAX,IAAqB,CAArB;AACAnC,mBAAWoC,QAAX,IAAuB,CAAvB;AACApC,mBAAWqC,MAAX,IAAqB,CAArB;AACArC,mBAAWsC,MAAX,IAAqB,CAArB;AACAtC,mBAAWuC,MAAX,IAAqB,CAArB;AACH,KA1FI;;AA4FL;AACAC,UAAM,gBAAY,CAEjB,CA/FI;;AAiGLC,UAAM,gBAAY,CAEjB,CAnGI;;AAqGLC,WAAO,iBAAY,CAElB,CAvGI;;AAyGLC,SAAK,eAAY,CAEhB,CA3GI;;AA6GLC,UAAM,gBAAY,CAEjB,CA/GI;;AAiHLC,iBAAa,uBAAY,CAExB,CAnHI;;AAsHLC,SAtHK,mBAsHG,CAEP;AAxHI;;AA0HL;AACA;AACA;AACA;AA7HJ","file":"pet.js","sourceRoot":"..\\..\\..\\..\\assets\\Global","sourcesContent":["// 宠物脚本\r\n\r\nvar GlobalData = require('globalData');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        image: cc.Sprite,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.init();\r\n    },\r\n\r\n    init: function () {\r\n        let petImagePath = GlobalData.gender == 0 ? \"pet/male_\" : \"pet/female_\";\r\n        let self = this;\r\n        if (GlobalData.species == 0) {\r\n            petImagePath += 'owl';\r\n        } else if (GlobalData.species == 1) {\r\n            petImagePath += 'penguins';\r\n        } else if (GlobalData.species == 2) {\r\n            petImagePath += 'cat';\r\n        } else if (GlobalData.species == 3) {\r\n            petImagePath += 'dog';\r\n        }\r\n        petImagePath += (GlobalData.color + 1) + '';\r\n\r\n        cc.loader.loadRes(petImagePath, cc.SpriteFrame, (err, sp) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            if (this.node) {\r\n                console.log(\"success\");\r\n                if (self.image) {\r\n                    self.image.spriteFrame = sp;\r\n                }\r\n            }\r\n        })\r\n    },\r\n\r\n    /**\r\n     * 宠物喂食操作，根据食物的属性改变宠物相应的属性和动作\r\n     * @param { shopItem } food \r\n     */\r\n    eat: function (toiletries) {\r\n\r\n    },\r\n\r\n    /**\r\n     * 宠物洗澡操作，根据洗澡用品的属性改变宠物相应的属性和动作\r\n     * @param { shopItem } toiletries\r\n     */\r\n    shower: function (toiletries) {\r\n\r\n    },\r\n\r\n    /**\r\n     * 宠物睡觉操作\r\n     * @param { Number } time\r\n     */\r\n    sleep: function (time) {\r\n\r\n    },\r\n\r\n    /**\r\n     * 宠物工作操作\r\n     * @param { Number } time 工作时长\r\n     * @param { Number } type 工种\r\n     */\r\n    work: function (time, type) {\r\n\r\n    },\r\n\r\n    /**\r\n     * 宠物工作操作\r\n     * @param { Number } time 旅游时长\r\n     * @param { Number } place 地点\r\n     */\r\n    travel: function (time, place) {\r\n\r\n    },\r\n\r\n    // 宠物空闲时间的属性变化及动作\r\n    waiting: function () {\r\n        GlobalData.hunger -= 1;\r\n        GlobalData.cleaness -= 1;\r\n        GlobalData.energy -= 1;\r\n        GlobalData.thirst -= 1;\r\n        GlobalData.growth += 1;\r\n    },\r\n\r\n    // 宠物动作\r\n    walk: function () {\r\n\r\n    },\r\n\r\n    jump: function () {\r\n\r\n    },\r\n\r\n    happy: function () {\r\n\r\n    },\r\n\r\n    sad: function () {\r\n\r\n    },\r\n\r\n    skip: function () {\r\n\r\n    },\r\n\r\n    sleepAction: function () {\r\n\r\n    },\r\n\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // 需要时刻刷新宠物状态，但是需要区别宠物正在进行的操作，还需要在update里添加一个计时器函数，\r\n    // update (dt) {\r\n    //     this.waiting();\r\n    // },\r\n});\r\n"]}